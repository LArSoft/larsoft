# build larsoftobj distribution

basequal=${1}

#require_buildfw_version 6.00.00 || return
  if version_greater \
   6.00.00     v$(print_version | sed -e 's&^.*[ \t]\{1,\}&&' -e 's&\.&_&g' ); then
    echo "Need buildFW 6.00.00 or better." 1>&2
    return 1
  fi

# specify version to bootstrap and setup ups
check_ups v6_0_8

build_bundle gallery-@GALLERY_DOT_VERSION@ ${basequal}
status=$?
if (( ${status} != 0)); then
  cat 1>&2 <<EOF
Build of gallery-@GALLERY_DOT_VERSION@ bundle failed with status ${status}
EOF
  return ${status}
fi

# infrastructure
for cv in @CMAKE_VERSION_LIST@; do
  do_build cmake ${cv}
done
for _cps_cetmodules_ver in @CETMODULES_VERSION_LIST@; do
  ##ensure_support_package -f NULL -- cetmodules ${_cps_cetmodules_ver}
  ensure_support_package -- cetmodules ${_cps_cetmodules_ver}
done
ensure_cetbuildtools @CETBUILDTOOLS_VERSION_LIST@
unset _cps_cetmodules_ver

do_build hub @HUB_VERSION@
do_build gh @GH_VERSION@
build_cet -G art-framework-suite mrb @MRB_VERSION@

do_build dk2nudata @DK2NUDATA_VERSION@ ${basequal}

build_cet nusimdata  @NUSIMDATA_VERSION@ ${basequal}
build_cet -G LArSoft larcoreobj @LARCOREOBJ_VERSION@ ${basequal}
build_cet -G LArSoft -n larcorealg @LARCOREALG_VERSION@ ${basequal}
build_cet -G LArSoft lardataobj @LARDATAOBJ_VERSION@ ${basequal}
build_cet -G LArSoft lardataalg @LARDATAALG_VERSION@ ${basequal}
build_cet -G LArSoft larvecutils @LARVECUTILS_VERSION@ ${basequal}
build_cet -G LArSoft larsoftobj @LARSOFTOBJ_VERSION@ ${basequal}

return 0
