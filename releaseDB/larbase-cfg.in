# build everything except larsoft itself

basequal=${1}

# specify version to bootstrap and setup ups
check_ups v6_1_1

build_bundle nulite-@NUDIST_DOT_VERSION@ ${basequal}
status=$?
if (( ${status} != 0)); then
  cat 1>&2 <<EOF
Build of nulite-@NUDIST_DOT_VERSION@ bundle failed with status ${status}
EOF
  return ${status}
fi

do_build marley @MARLEY_VERSION@ ${basequal}
do_build pandora @PANDORA_VERSION@ ${basequal}
build_noarch eigen @EIGEN_VERSION@
do_build jsoncpp @JSONCPP_VERSION@ ${basequal}
do_build jsonnet @JSONNET_VERSION@ ${basequal}
do_build wirecell @WIRECELL_VERSION@ ${basequal}
# Ubuntu builds will need protobuf here
if [ "${basequal}" = "e15" ] || [ "${basequal}" = "e17" ]; then # cannot build for c2 yet
  do_build protobuf @PROTOBUF_VERSION@ ${basequal}
  do_build tensorflow @TENSORFLOW_VERSION@ ${basequal}
fi

# add to manifest if no build - larsoft_data, mrb
build_noarch ifdhc_config @IFDHC_CONFIG_VERSION@
build_noarch larsoft_data @LARSOFT_DATA_VERSION@
build_noarch mrb @MRB_VERSION@

# new cetpkgsupport - temporary
#ensure_cetpkgsupport @CETPKGSUPPORT_VERSION@

build_cet systematicstools @SYSTEMATICSTOOLS_VERSION@ ${basequal}
build_cet nusystematics @NUSYSTEMATICS_VERSION@ ${basequal}

return 0
